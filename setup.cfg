[coverage:run]
branch = True
source = flask_unchained

[coverage:html]
directory = coverage_html_report

[tool:pytest]
testpaths = tests
addopts = -s
filterwarnings =
    ignore:wtforms.ext.sqlalchemy is deprecated:DeprecationWarning
    ignore:The create_engine.convert_unicode parameter:sqlalchemy.exc.SADeprecationWarning
    ignore:Use .persist_selectable:sqlalchemy.exc.SADeprecationWarning

[bumpversion]
current_version = 0.7.9
parse =
    (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)          # major, minor and patch
    (?:\-(?P<pre>(?:dev|alpha|beta|rc))\.(?P<prenum>\d+))?  # pre-release
    (?:\+(?P<build>\d+))?                                   # build metadata
serialize =
    {major}.{minor}.{patch}-{pre}.{prenum}+{build}
    {major}.{minor}.{patch}-{pre}.{prenum}
    {major}.{minor}.{patch}+{build}
    {major}.{minor}.{patch}

[bumpversion:part:build]
independent = True

[bumpversion:part:pre]
optional_value = stable
values =
    dev
    alpha
    beta
    rc
    stable

[bumpversion:part:prenum]
first_value = 1

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file:flask_unchained/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[bumpversion:file:docs/conf.py]
search = release = 'v{current_version}'
replace = release = 'v{new_version}'

[bumpversion:file:flask_unchained/_code_templates/project/requirements.txt]
search = flask-unchained[{{{{ ','.join(requirements) }}}}]>={current_version}
replace = flask-unchained[{{{{ ','.join(requirements) }}}}]>={new_version}
